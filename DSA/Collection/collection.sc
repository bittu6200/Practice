val arr=Array(1,2,3,4,5)
/*
distinct
cartesian
coalesce
filterByRange
flatMap
groupBy
keys
union
zip
/////////////////Action//////////
collect
collectAsMap
count
reduce
take
first
countByValue
lookup
max
min
mean
variance
countByKey
groupByKey
reduceBykey
foldByKey
cogroup
join
leftOuterJoin
rightOuterJoin
keyBy
mapValue
cache
repartion

 */